# Introduction to supervised classification

<!--
- overview of supervised classification, model structure
- refer to the ISLR language
- basics of training/testing for model building
- model components needed from all
- common tasks: checking clusters relative to class labels, looking at boundaries
-->

Methods for supervised classification originated the early nineteenth century, under the term *discriminant analysis* (see, for example, @Fi36). The late 1900s and 2000s has seen an explosion of research with many new methods emerging, especially addressing the increases collection of data, and storage in databases. The fundamental goals and approaches remain the same: to be able accurately predict the class labels using a model developed from a categorical response variable and multivariate predictors. In contrast to unsupervised classification, the class label (categorical response variable) is known, in the training sample. The training sample is used to build the prediction model, and also to estimate the accuracy, or inversely error, of the model for future data. 

::: {.content-visible when-format="html"}
::: info
Knowing what shapes of the classes are and how much separation there is between these shapes helps to determine the appropriateness of a classification method. 
:::
:::

::: {.content-visible when-format="pdf"}
\infobox{Knowing what shapes of the classes are and how much separation there is between these shapes helps to determine the appropriateness of a classification method.}
:::

\index{classification!supervised}

For a long time the focus has been on methods and algorithms that focus on predictive accuracy. While this is still an ongoing aim, a substantial change has been gaining traction where being able to understand a model, to interpret it, understand how predictions are made is underway. Questions like:

- Are the classes well separated in the data space, so that they
correspond to distinct clusters?  If so, what are the shapes of the clusters?  Is each cluster sufficiently ellipsoidal so that we can assume that the data arises from a mixture of multivariate normal distributions?  Do the clusters exhibit characteristics that suggest one algorithm in preference to others?
- Where does the boundary between classes fall?  Are the classes
linearly separable, or does the difference between classes suggest
a non-linear boundary?  How do changes in the input parameters affect these boundaries? How do the boundaries generated by different methods vary?
- What cases are misclassified, or have more uncertain predictions?  Are there places in the data space where predictions are especially good or bad?
- Which predictors most contribute to the model predictions? Is it possible to reduce the set of explanatory variables?
 
 
```{r}
#| label: fig-sup-example
#| fig-cap: "Examples of supervised classification patterns: (a) linearly separable, (b) linear but not completely separable, (c) non-linearly separable, (d) non-linear, but not completely separable."
#| echo: false
#| message: false
#| fig-height: 3
#| fig-width: 9
#| out-width: 100%
library(ggplot2)
library(dplyr)
library(colorspace)
library(patchwork)
set.seed(524)
x1 <- runif(176) + 0.5
x1[1:61] <- x1[1:61] - 1.2
x2 <- 1 + 2*x1 + rnorm(176)
x2[1:61] <- 2 - 3*x1[1:61] + rnorm(61)
x3 <- runif(176) + 0.5
x3[1:61] <- x3[1:61] - 0.5
x4 <- 0.25 - x3 + rnorm(176)
x4[1:61] <- -0.25 + 3*x3[1:61] + rnorm(61)
cl <- factor(c(rep("A", 61), rep("B", 176-61)))
df <- data.frame(x1, x2, x3, x4, cl)
class1 <- ggplot(df, aes(x=x1, y=x2, colour = cl)) +
  geom_point(alpha=0.7) +
  scale_colour_discrete_divergingx(
      palette = "Zissou 1", nmax = 2, rev = TRUE) +
  annotate("text", -0.65, 6.6, label="a") +
  theme(aspect.ratio=1,
        legend.position = "none",
        axis.text = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.background = element_rect("white"),
        panel.border = element_rect("black", fill=NA, 
             linewidth = 0.5)) 
class2 <- ggplot(df, aes(x=x3, y=x4, colour = cl)) +
  geom_point(alpha=0.7) +
  scale_colour_discrete_divergingx(
      palette = "Zissou 1", nmax = 2, rev = TRUE) +
  annotate("text", 0.05, 4.1, label="b") +
  theme(aspect.ratio=1,
        legend.position = "none",
        axis.text = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.background = element_rect("white"),
        panel.border = element_rect("black", fill=NA, 
             linewidth = 0.5))
set.seed(826)
x5 <- 2*(runif(176) - 0.5)
x6 <- case_when(x5 < -0.4 ~ -1.2 - 3 * x5,
                x5 > 0.2 ~ 2.4 - 3 * x5,
                .default = 1.2 + 3 * x5)
x5 <- 2*x5
x6 <- x6 + rnorm(176) * 0.25
x6[1:83] <- x6[1:83] - 1.5
x7 <- 2*(runif(176) - 0.5)
x8 <- case_when(x7 < -0.4 ~ -1.2 - 3 * x7,
                x7 > 0.2 ~ 2.4 - 3 * x7,
                .default = 1.2 + 3 * x7)
x7 <- 2*x7
x8[x7 < -0.1] <- x8[x7 < -0.1] + rnorm(length(x8[x7 < -0.1])) * 0.25
x8[x7 >= -0.1] <- x8[x7 >= -0.1] + rnorm(length(x8[x7 >= -0.1])) * 0.5
x8[1:83] <- x8[1:83] - 1.5
cl2 <- factor(c(rep("A", 83), rep("B", 176-83)))
df2 <- data.frame(x5, x6, x7, x8, cl2)
class3 <- ggplot(df2, aes(x=x5, y=x6, colour = cl2)) +
  geom_point(alpha=0.7) +
  scale_colour_discrete_divergingx(
      palette = "Zissou 1", nmax = 2, rev = TRUE) +
  annotate("text", -1.95, 2.15, label="c") +
  theme(aspect.ratio=1,
        legend.position = "none",
        axis.text = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.background = element_rect("white"),
        panel.border = element_rect("black", fill=NA, 
             linewidth = 0.5))
class4 <- ggplot(df2, aes(x=x7, y=x8, colour = cl2)) +
  geom_point(alpha=0.7) +
  scale_colour_discrete_divergingx(
      palette = "Zissou 1", nmax = 2, rev = TRUE) +
  annotate("text", 1.95, 1.9, label="d") +
  theme(aspect.ratio=1,
        legend.position = "none",
        axis.text = element_blank(),
        axis.title = element_blank(),
        axis.ticks = element_blank(),
        panel.background = element_rect("white"),
        panel.border = element_rect("black", fill=NA, 
             linewidth = 0.5))
print(class1 + class2 + class3 + class4 + plot_layout(ncol=4))
```

@fig-sup-example shows some 2D examples where the two classes are (a) linearly separable, (b) not completely separable but linearly different, (c) non-linearly separable and (d) not completely separable but with a non-linear difference. We can also see that in (a) only the horizontal variable would be important for the model because the two classes are completely separable in this direction. Although the pattern in (c) is separable classes, most models would have difficulty capturing the separation. It is for this reason that it is important to understand the boundary between classes produced by a fitted model. In each of b, c, d it is likely that some observations would be misclassified. Identifying these cases, and inspecting where they are in the data space is important for understanding the model's future performance. 

Explainability has been a pursuit in statistics for a long time, and includes checking model assumptions, diagnosing the fit, and assessing variable importance. Statistical models tend to impose strong assumptions on data, that may or may not be reasonable. The benefit is that the resulting model will be easy to deploy and use. In contrast, computational models that follow prescribed algorithms tend to seen as having fewer assumptions and can flexibly fit to data. However, all algorithms impose some belief that may or may not be reasonable, that need checking. 

Using a machine learning conceptual framework and associated terminology may be helpful in understanding the importance of explainability. Modeling methods are characterised by *bias* and *variance*, and *flexibility*. Imposing more beliefs or assumptions on the model fit potentially creates a more biased model. Here are some examples of the reasoning: 

- In linear discriminant analysis (LDA) (@sec-lda) there is a strong assumption that classes correspond to elliptical clusters. If the data does *not* have classes with this structure the result is a biased model that does not fit the data. 
- In contrast, tree algorithms (most commonly) operate on single variables at each split, which imposes the belief that there is no correlation between variables. If the data *does* have elliptical clusters where separations are in combinations of variables then a tree model will produce a biased model that does not effectively fit the data.
- The tree model is considered more flexible that LDA because the algorithm can be forced to keep iterating to closely fit a particular training sample. 
- The LDA model may have high bias, but it likely generate a similar fitted model if a different sample of data was used, and thus have low variance. 
- In contrast a tree model could be forced to have low bias for a particular sample of data, if the same algorithm was fitted to a different sample it would likely be quite different, thus be described as high variance. 

\index{classification!linear discriminant analysis (LDA)}
\index{classification!bias}
\index{classification!variance}
\index{classification!flexibility}

::: {.content-visible when-format="html"}
::: info
Knowing the shapes of the class clusters helps to assess whether a particular method will produce high or low bias. 
:::
:::

::: {.content-visible when-format="pdf"}
\infobox{Knowing the shapes of the class clusters helps to assess whether a particular method will produce high or low bias.}
:::


Predictive accuracy trades off these characteristics, with the best model having low bias, low variance. Ideally, being sufficiently flexible but no more than necessary.

High-dimensional visualisation can help with this. 

Addressing these types of queries also motivates the emerging field called explainable artificial intelligence (XAI), which goes beyond predictive accuracy to more completely satisfy the *desire to extract knowledge from data*. 

Although we focus on categorical response, some of the techniques here can be modified or adapted for problems with a numeric, or continuous, response variable. With a categorical response, and numerical predictors, we map colour to the response variable and use the tour to examine the relationship between predictors, and the different classes. 

image to illustrate bias and variance and flexibility

- discuss semi-supervised
- continuous response
- inadequacy of numerical goodness of fit

\index{data!bushfires}
\index{data!pisa}
\index{data!aflw}

## Exercises {-}

1. Using just the variables `se`, `maxt`, `mint`, `log_dist_road`, and "accident" or "lightning" causes, in the `bushfires` data use the tour (grand or guided using `lda_pp`) to decide 

a. whether the two classes are separable, 
b. which variables might be more important, and 
c. whether one should fit a linear or nonlinear classifier to separate the groups by assessing whether the border between groups is linear or nonlinear.

2. Make a 10% sample of the `pisa` data, stratified by the two countries, and examine the first 5 math scores `PV1MATH`-`PV5MATH`. Explain whether there is a difference between the two countries, and whether they are separable based on math scores.

3. There are several interesting data sets with class variables available on the [GGobi website](http://ggobi.org/book/index.html). Examine the differences between `type` of music, based on the the variables `lvar`, `lave`, `lmax`, `lfener`, `lfreq`. Are these music types separable? If so, which variables are important. The `music` data can be read using:

```{r}
#| echo: true
#| eval: false
library(readr)
library(dplyr)
music <- read_csv("http://ggobi.org/book/data/music-sub.csv",
                  show_col_types = FALSE) |>
  rename(title = `...1`) |>
  mutate(type = factor(type))
```

4. The `aflw` data contains information on the [player positions](https://en.wikipedia.org/wiki/Australian_rules_football_positions), as well as their statistics. Subset the data to `FF` (full forward), `BPL` (back pocket left) and `RR` (ruck). Examine the differences between player statistics (goals to tackles) for these positions. Explain whether the players in these positions have different profiles on the statistics, and whether the position is distinguishable based on combinations of the statistics. 



```{r eval=FALSE}
#| echo: false
library(mulgar)
library(tourr)
library(dplyr)
data(bushfires)
b_sub <- bushfires |>
  select(se, maxt, mint, log_dist_road, cause) |>
  filter(cause %in% c("accident", "lightning")) |>
  rename(ldr = log_dist_road) |>
  mutate(cause = factor(cause))
animate_xy(b_sub[,-5], col=b_sub$cause, rescale=TRUE)
animate_xy(b_sub[,-5], guided_tour(lda_pp(b_sub$cause)), col=b_sub$cause, rescale=TRUE)

data(pisa)
set.seed(441)
pisa_sub <- pisa |>
  group_by(CNT) |>
  sample_frac(0.10)
animate_xy(pisa_sub[,2:6], col=pisa_sub$CNT)

animate_xy(music[,4:8], guided_tour(lda_pp(music$type)), col=music$type, rescale=TRUE)

data(aflw)
aflw_sub <- aflw |> 
  filter(position %in% c("BPL", "FF", "RR")) |>
  mutate(position = factor(position))
animate_xy(aflw_sub[,8:15], col=aflw_sub$position, rescale=TRUE)
animate_xy(aflw_sub[,8:15], 
           guided_tour(lda_pp(aflw_sub$position)), 
           col=aflw_sub$position, 
           rescale=TRUE)

```

::: {.content-hidden}
Q1 answer: 
It is best to use the guided tour to examine differences. 

a. The two types of causes are not separable, but there is some difference. 
b. The distance from roads is the major variable, where closer to roads indicates the fire was likely started by accident.
c. Because there are so few accident observations and because there is not much difference between the groups a linear boundary is probably the most optimisitic. There is no strong suggestion that a non-linear boundary exists.

Q2 answer:
The scores for both countries are elliptically shaped, and slightly shifted from each other. They are not separable, and it would be not useful to build a classifier for this data.

Q3 answer:
The types of music are nearly separable. At least, "Rock" is almost perfectly separated from "Classical" but "New wave" is indistinguishable from either.

The difference is mostly due to `lave`, with smaller contributions from all of the other variables.

Q4 answer:
The guided tour with lda_pp is best for studying this data. The players in these positions have quite different statistics, especially FF vs RR. From the final projection using the guided tour, RR is distinguishable from FF, primarily in disposals, RR makes more disposals and FF few. The other statistics that contribute to this difference are kicks, tackles, bounces and behinds. FF tend to do more bounces and behinds than RR, and RR makes more kicks and tackles. The BPL players are distinguishable from the other two based on marks, goals and handballs. BPL do more marks, and RR and FF make more goals and do more handballs.

These groups are linearly separable, but the covariance of each group is very different, so LDA could not be used. 
:::
