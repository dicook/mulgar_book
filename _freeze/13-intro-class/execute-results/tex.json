{
  "hash": "007d9821627d2a6206ddb5ab489d7816",
  "result": {
    "engine": "knitr",
    "markdown": "# Introduction to supervised classification\n\n<!--\n- overview of supervised classification, model structure\n- refer to the ISLR language\n- basics of training/testing for model building\n- model components needed from all\n- common tasks: checking clusters relative to class labels, looking at boundaries\n-->\n\nMethods for supervised classification originated the early nineteenth century, under the term *discriminant analysis* (see, for example, @Fi36). The late 1900s and 2000s has seen an explosion of research with many new methods emerging, especially addressing the increases collection of data, and storage in databases. The fundamental goals and approaches remain the same: to be able accurately predict the class labels using a model developed from a categorical response variable and multivariate predictors. In contrast to unsupervised classification, the class label (categorical response variable) is known, in the training sample. The training sample is used to build the prediction model, and also to estimate the accuracy, or inversely error, of the model for future data. \n\n::: {.content-visible when-format=\"html\"}\n::: info\nKnowing what shapes of the classes are and how much separation there is between these shapes helps to determine the appropriateness of a classification method. \n:::\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n\\infobox{Knowing what shapes of the classes are and how much separation there is between these shapes helps to determine the appropriateness of a classification method.}\n:::\n\n\\index{classification!supervised}\n\n## Beyond predictive accuracy\n\nFor a long time the focus has been on methods and algorithms that focus on predictive accuracy. While this is still an ongoing aim, a substantial change has been gaining traction where being able to understand a model, to interpret it, understand how predictions are made is underway. Questions like:\n\n- Are the classes well separated in the data space, so that they\ncorrespond to distinct clusters?  If so, what are the shapes of the clusters?  Is each cluster sufficiently ellipsoidal so that we can assume that the data arises from a mixture of multivariate normal distributions?  Do the clusters exhibit characteristics that suggest one algorithm in preference to others?\n- Where does the boundary between classes fall?  Are the classes\nlinearly separable, or does the difference between classes suggest\na non-linear boundary?  How do changes in the input parameters affect these boundaries? How do the boundaries generated by different methods vary?\n- What cases are misclassified, or have more uncertain predictions?  Are there places in the data space where predictions are especially good or bad?\n- Which predictors most contribute to the model predictions? Is it possible to reduce the set of explanatory variables?\n \n \n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Examples of supervised classification patterns: (a) linearly separable, (b) linear but not completely separable, (c) non-linearly separable, (d) non-linear, but not completely separable.](13-intro-class_files/figure-pdf/fig-sup-example-1.pdf){#fig-sup-example width=100%}\n:::\n:::\n\n\n\n\n\n\n\n\n@fig-sup-example shows some 2D examples where the two classes are (a) linearly separable, (b) not completely separable but linearly different, (c) non-linearly separable and (d) not completely separable but with a non-linear difference. We can also see that in (a) only the horizontal variable would be important for the model because the two classes are completely separable in this direction. Although the data in (c) has separable classes, most models would have difficulty capturing the separation. It is for this reason that it is important to understand the boundary between classes produced by a fitted model. In each of b, c, d it is likely that some observations would be misclassified. Identifying these cases, and inspecting where they are in the data space is important for understanding the model's performance on different samples. \n\nExplainability has been a pursuit in statistics for a long time, and includes checking model assumptions, diagnosing the fit, and assessing variable importance. Statistical models tend to impose strong assumptions on data, that may or may not be reasonable. If they are, the benefit is that the resulting model will be easy to deploy and interpret. In contrast, computational models that follow prescribed algorithms tend to seen as having fewer assumptions and can flexibly fit to data. However, all algorithms impose some belief that may or may not be reasonable, that need checking.\n\n\n## Balancing bias and variance\n\nUsing a machine learning conceptual framework and associated terminology may be helpful in understanding the importance of explainability. Modeling methods are characterised by *bias* and *variance*, and *flexibility*. Imposing more beliefs or assumptions on the model fit potentially creates a more biased model. Here are some examples of the reasoning: \n\n- In linear discriminant analysis (LDA) (@sec-lda) there is a strong assumption that classes correspond to elliptical clusters. If the data does *not* have classes with this structure the result is a biased model that does not fit the data. \n- In contrast, tree algorithms (@sec-trees-forests) (most commonly) operate on single variables at each split, which imposes the belief that there is no correlation between variables. If the data *does* have elliptical clusters where separations are in combinations of variables then a tree model will produce a biased model that does not effectively fit the data.\n- The tree model is considered more flexible that LDA because the algorithm can be forced to keep iterating to closely fit a particular training sample. \n- The LDA model may have high bias, but it likely generate a similar fitted model if a different sample of data was used, and thus have low variance. \n- In contrast a tree model could be forced to have low bias for a particular sample of data, if the same algorithm was fitted to a different sample it would likely be quite different, thus be described as high variance. \n\n\\index{classification!linear discriminant analysis (LDA)}\n\\index{classification!bias}\n\\index{classification!variance}\n\\index{classification!flexibility}\n\n::: {.content-visible when-format=\"html\"}\n::: info\nUsing high-dimensional visualisation to understand the shapes of the class clusters will help to assess whether a particular method will produce a high or low bias model. \n:::\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n\\infobox{Using high-dimensional visualisation to understand the shapes of the class clusters will help to assess whether a particular method will produce a high or low bias model.}\n:::\n\n\nPredictive accuracy trades off these characteristics, with the best model having low bias, low variance. Ideally, being sufficiently flexible but no more than necessary. @fig-bias-variance illustrates these model attributes for the data used in @fig-sup-example c. There are three samples drawn from the same process, that generates the separated zig-zag clusters, and two different types of models are fitted. The training samples are shown as black points, with symbol indicating the class. The colour represents the predictions from the different fitted models. Plots a and d show one training sample; plots b and e show a second training sample; plots c and f show the third training sample. Plots a, b and c show predictions a simple statistical model, and plots d, e, f show predictions from a computational model that has few assumptions. The model fitted in a-c has high bias because it does not capture the zig-zag but low variance because it is virtually identical for all samples. The second model with fit shown in d-f has lower bias, because it more flexibly fits the zig-zag structure. But it has higher variance, because the actual model changes substantially for different training samples. Balancing this trade-off to achieve a model that has low bias and low variability is desirable. \n\n\n\n\n\n\n\n\n::: {.cell}\n::: {.cell-output-display}\n![Illustrating bias and variance using three different samples from the same distribution (a/d, b/e, c/f) and two different models (a-c, d-f). The black points are the training samples and colour indicates predictions from the resulting fitted model. The model fitted in a-c has high bias but low variance. The model fitted in d-f has lower bias but higher variance.](13-intro-class_files/figure-pdf/fig-bias-variance-1.pdf){#fig-bias-variance fig-alt='FIX ME' width=100%}\n:::\n:::\n\n\n\n\n\n\n\n\nBias and variance are conceptual constructs. Bias is not possible to quantify unless the **true model is known**. It is theoretical, excellent for setting up simulations and comparing various models, because in these controlled scenarios they can be computed. In practice, it is not possible to compute, but high-dimensional visualisation can help. By understanding the shape of the class and separation between classes visually, it is possible to determine whether a particular method will be able ot capture this or not, and thus have low or high bias. \n\nTo understand variance, we need to know how the model fit changes when a different training samples is used to fit the model. This is achieved by dividing the training sample into folds and fitting a model to each fold.  This is more difficult to evaluate with visual methods because it would require examining multiple samples for small differences. \n\nHowever, related to this is the practice of dividing the data into training and testing (or training and testing and validation) sets. The training set is used to fit the model, and the test set is used to estimate the error of the model when used on new samples. This is particularly important for computational models with few assumptions. High-dimensional visualisation can help to assess whether the training and test samples are comparable, and thus be suitable to using for the two tasks. \n\n## How to use the tour with classification tasks\n\nThe primary start to using tours with classification problems is to colour observations by the class variable. Then use the grand tour and guided tour to explore the shapes of the clusters, and separation between them. If there are many classes, start by colouring one class against all the others. \nAfter a model has been fitted to the data, there are two directions for effort: (1) Labelling observations as correctly classified or not, (2) simulate a set of data in the domain of the predictors so that the model boundary can be examined. \n@fig-class-intro-pdf illustrates the approach, and purposes of using different tours. There are two 4D data sets. One has elliptically shaped clusters corresponding to two classes and a gap between them (a,b). The other (c,d) has one of my favourite data games to play with students. Because the class clusters are nested it is very difficult to construct a good classification model using simple methods. However, with good visualisation it is relatively easy to see the nested structure, and fit a simple and perfect model by transforming the variables using distance from the mean. The slice tour is useful for this data, and occasionally useful for detecting odd shapes of clusters. \n\nGenerally, the grand and guided tour are useful for exploring the class structure. Using the grand tour, used in (a), shows that the shape of the two clusters is elliptical, roughly the same size but oriented differently. It is also possible to see a large gap between the two clusters. This shape would suggest that some methods are technically incorrect to apply. But the large gap between clusters means that practically several simple methods would be adequate, probably, and there is no need to apply a more complex model. The guided tour, used in (b), focuses the view on separations between the classes. The primary index to use is `lda_pp()` will help to find some differences between clusters, but it is simple, and easily confused by odd cluster shapes.  \n\n::: {.content-visible when-format=\"html\"}\n::: {#fig-class-intro-html layout-ncol=2}\n![grand tour](gifs/intro_class1.gif)\n\n![guided tour](gifs/intro_class2.gif)\n![projection display](gifs/intro_class3.gif)\n\n![slice display](gifs/intro_class4.gif)\n\nUsing the tour for classification problems starts by colouring observations by the class variable. Here two different simulated 4D data sets are shown: (a,b) two classes with elliptically shaped clusters that have similar size but different orientations, and (c,d) a spherical kernel cluster inside a spherical shell. Plot (a) shows a grand tour revealing the overall elliptical shape with different orientations and the gap between the two clusters. Plot (b) shows the use of a guided tour to focus in on the gap. Plot (c) shows a grand tour of projections which hints at some difference between the two class clusters, but the slice tour (d) cuts through the projection to reveal the kernel inner cluster and the shell shape of the outside cluster.\n:::\n:::\n\n::: {.content-visible when-format=\"pdf\"}\n::: {#fig-class-intro-pdf layout-ncol=2}\n![grand tour](images/intro_class1.png){width=200}\n\n\n![guided tour](images/intro_class2.png){width=200}\n\n![projection display](images/intro_class3.png){width=200}\n\n![slice display](images/intro_class4.png){width=200}\n\nUsing the tour for classification problems starts by colouring observations by the class variable. Here two different simulated 4D data sets are shown: (a,b) two classes with elliptically shaped clusters that have similar size but different orientations, and (c,d) a spherical kernel cluster inside a spherical shell. Plot (a) shows a single projection from a grand tour showing a different orientation, and (b) shows the final projection from a guided tour which shows a big gap between the two clusters. Plots (c) and (d) show the use of the slice tour to cut through the projection and reveal the shell shape of the outside class cluster.\n:::\n:::\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n- Construct data for diagnostics, e.g. classifly\n- Slices\n\nHigh-dimensional visualisation can help with this. \n\nAddressing these types of queries also motivates the emerging field called explainable artificial intelligence (XAI), which goes beyond predictive accuracy to more completely satisfy the *desire to extract knowledge from data*. \n\nAlthough we focus on categorical response, some of the techniques here can be modified or adapted for problems with a numeric, or continuous, response variable. With a categorical response, and numerical predictors, we map colour to the response variable and use the tour to examine the relationship between predictors, and the different classes. \n\nimage to illustrate bias and variance and flexibility\n\n- discuss semi-supervised\n- continuous response\n- inadequacy of numerical goodness of fit\n- handling many classes\n- handling many variables\n\n## Interpretability: what the model sees\n\n\n- Global\n- PDP - what the model \n- Local \n\n\\index{data!bushfires}\n\\index{data!pisa}\n\\index{data!aflw}\n\n## Exercises {-}\n\n1. Using just the variables `se`, `maxt`, `mint`, `log_dist_road`, and \"accident\" or \"lightning\" causes, in the `bushfires` data use the tour (grand or guided using `lda_pp`) to decide \n\na. whether the two classes are separable, \nb. which variables might be more important, and \nc. whether one should fit a linear or nonlinear classifier to separate the groups by assessing whether the border between groups is linear or nonlinear.\n\n2. Make a 10% sample of the `pisa` data, stratified by the two countries, and examine the first 5 math scores `PV1MATH`-`PV5MATH`. Explain whether there is a difference between the two countries, and whether they are separable based on math scores.\n\n3. There are several interesting data sets with class variables available on the [GGobi website](http://ggobi.org/book/index.html). Examine the differences between `type` of music, based on the the variables `lvar`, `lave`, `lmax`, `lfener`, `lfreq`. Are these music types separable? If so, which variables are important. The `music` data can be read using:\n\n\n\n\n\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(readr)\nlibrary(dplyr)\nmusic <- read_csv(\"http://ggobi.org/book/data/music-sub.csv\",\n                  show_col_types = FALSE) |>\n  rename(title = `...1`) |>\n  mutate(type = factor(type))\n```\n:::\n\n\n\n\n\n\n\n\n4. The `aflw` data contains information on the [player positions](https://en.wikipedia.org/wiki/Australian_rules_football_positions), as well as their statistics. Subset the data to `FF` (full forward), `BPL` (back pocket left) and `RR` (ruck). Examine the differences between player statistics (goals to tackles) for these positions. Explain whether the players in these positions have different profiles on the statistics, and whether the position is distinguishable based on combinations of the statistics. \n\n\n\n\n\n\n\n\n\n\n::: {.cell}\n\n:::\n\n\n\n\n\n\n\n\n::: {.content-hidden}\nQ1 answer: \nIt is best to use the guided tour to examine differences. \n\na. The two types of causes are not separable, but there is some difference. \nb. The distance from roads is the major variable, where closer to roads indicates the fire was likely started by accident.\nc. Because there are so few accident observations and because there is not much difference between the groups a linear boundary is probably the most optimisitic. There is no strong suggestion that a non-linear boundary exists.\n\nQ2 answer:\nThe scores for both countries are elliptically shaped, and slightly shifted from each other. They are not separable, and it would be not useful to build a classifier for this data.\n\nQ3 answer:\nThe types of music are nearly separable. At least, \"Rock\" is almost perfectly separated from \"Classical\" but \"New wave\" is indistinguishable from either.\n\nThe difference is mostly due to `lave`, with smaller contributions from all of the other variables.\n\nQ4 answer:\nThe guided tour with lda_pp is best for studying this data. The players in these positions have quite different statistics, especially FF vs RR. From the final projection using the guided tour, RR is distinguishable from FF, primarily in disposals, RR makes more disposals and FF few. The other statistics that contribute to this difference are kicks, tackles, bounces and behinds. FF tend to do more bounces and behinds than RR, and RR makes more kicks and tackles. The BPL players are distinguishable from the other two based on marks, goals and handballs. BPL do more marks, and RR and FF make more goals and do more handballs.\n\nThese groups are linearly separable, but the covariance of each group is very different, so LDA could not be used. \n:::\n",
    "supporting": [
      "13-intro-class_files/figure-pdf"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {},
    "engineDependencies": {
      "knitr": [
        "{\"type\":\"list\",\"attributes\":{},\"value\":[]}"
      ]
    },
    "preserve": null,
    "postProcess": false
  }
}