## Self-organizing maps {#sec-som}
\index{cluster analysis!self-organizing maps (SOM)}

<!-- 
A self-organizing map (SOM) \cite{Ko01} is constructed using a constrained $k$-means algorithm. A 1D or 2D net is stretched through the data. The knots, in the net, form the cluster means, and the points closest to the knot are considered to belong to that cluster.
The similarity of nodes (and their corresponding clusters) is defined as proportional to their distance from one another on the net.

We will demonstrate SOM using the music data. The data has 62 cases, each one corresponding to a piece of music.  For each piece there are seven variables: the artist, the type of music, and five characteristics, based on amplitude and frequency, that were computed using the first 40 seconds of the piece on CD.  The music used included popular rock songs by Abba, the Beatles, and the Eels; classical compositions by Vivaldi, Mozart and Beethoven; and several new wave pieces by Enya. Figure~\ref{music-som} displays a typical view of the results of clustering using SOM on the music data. Each data point corresponds to a piece of music and is labeled by the band or the composer. The map was generated by this R code:

```
> library(som)
> d.music <- read.csv("music-sub.csv", row.names=1)
> d.music.std <- cbind(subset(d.music.std,
   select=c(artist,type)),
   apply(subset(d.music.std,select=lvar:lfreq), 
   2, f.std.data))
> music.som <- som(subset(d.music.std,select=lvar:lfreq), 
   6, 6, neigh="bubble", rlen=1000)
```

The left plot in @fig-music-som is called the 2D map
view. Here we have used a $6\times 6$ net pulled through the 5D data. The net that was wrapped through the high-dimensional space is straightened and laid out flat, and the points, like fish in a fishing net, are laid out where they have been trapped. In the plot shown here, the points have been jittered slightly, away from the knots of the net, so that the labels do not overlap too much. If the fit is good, the points that are close together in this 2D map view are close
together in the high-dimensional data space and close to the net as it was placed in the high-dimensional space.

Much of the structure in the map is no surprise: The rock (purple) and classical tracks (green) are on opposing corners, with rock in the upper right and classical in the lower left. The Abba tracks are all
grouped at the top and left of the map. The Beatles and Eels tracks are mixed. There are some unexpected associations: For example, one Beatles song, which turns out to be "Hey Jude", is mixed among the
classical compositions!


% Figure 8
\begin{figure*}[htbp]
\centerline{
  {\includegraphics[width=2.4in]{chap-clust/music-som.pdf}}
  {\includegraphics[width=2.4in]{chap-clust/music-pca.pdf}}
}
\caption[Comparison of clustering music tracks using a self-organizing
map versus principal components]{Comparison of clustering music
tracks using a self-organizing map versus principal components.
The data was clustered using a self-organizing map, as shown in a 2D
map view.  (When tracks clustered at a node, jittering was used to
spread the labels.)  Compare with the scatterplot of the first two
principal components.}
\label{music-som}
\end{figure*}


Construction of a self-organizing map is a dimension reduction method, akin to multidimensional scaling @BG05 or principal component analysis @JW02. Using principal component analysis to find a low-dimensional approximation of the similarity between music pieces,
yields the second plot in @fig-music-som. There are many differences between the two representations. The SOM has a more even spread of music pieces across the grid, in contrast to the stronger clumping of points in the PCA view.  Indeed, the PCA view shows several outliers, notably one of the Vivaldi compositions, which could lead us to learn things about the data that we might miss by relying exclusively on the SOM.
\index{outliers}
\index{principal component analysis}
\index{multidimensional scaling (MDS)}

These two methods, SOM and PCA, have provided two contradictory clustering models.  How can we determine which is the more accurate description of the data structure?  An important part of model assessment is plotting the model in relation to the data.  Although
plotting the low-dimensional map is the common way to graphically assess the SOM results, it is woefully limited.  If a model has flaws, they may not show up in this view and will only appear in plots of
the model in the data space.  We will use the grand tour to create these plots, and this will help us assess the two models.

We will use a grand tour to view the net wrapped in among the data, hoping to learn how the net converged to this solution, and how it wrapped through the data space.  Actually, it is rather tricky to fit
a SOM: Like many algorithms, it has a number of parameters and initialization conditions that affect the outcome. 

To set up the data, we will need to add variables containing the map coordinates to the data:

```
> d.music.som <- f.ggobi.som(subset(d.music.std,
   select=lvar:lfreq), music.som)
```

\noindent Because this data has several useful categorical  labels for each row, we will want to keep this information in the data when it is loaded into the tour:

```
> d.music.som <- data.frame(
  Songs=factor(c(as.character(row.names(d.music)),
    rep("0",36))),
  artist=factor(c(as.character(d.music[,1]),rep("0",36))),
  type=factor(c(as.character(d.music[,2]),rep("0",36))),
  lvar=d.music.som[,1], 
  lave=d.music.som[,2], 
  lmax=d.music.som[,3],
  lfener=d.music.som[,4], lfreq=d.music.som[,5],
  Map.1=d.music.som[,6], Map.2=d.music.som[,7])
> gd <- ggobi(d.music.som)[1]
```

\noindent Add the edges that form the SOM net:

```
> d.music.som.net <- f.ggobi.som.net(music.som)
> edges(gd) <- d.music.som.net + 62
```

\noindent And finally color the points according to the type of music:

```
> gcolor <- rep(8,98)
> gcolor[d.music.som$Type=="Rock"] <- 6
> gcolor[d.music.som$Type=="Classical"] <- 4
> gcolor[d.music.som$Type=="New wave"] <- 1
> glyph_color(g) <- gcolor
```

The results can be seen in @fig-clust-SOMa and
@fig-clust-SOMb. The plots show two different states of the fitting process and of the SOM net cast through the data. In both fits, a $6\times 6$ grid is used and the net is initialized in the direction of the first two principal components. In both fits the variables were
standardized to have mean equal to zero and standard deviation equal to 1. The first SOM fit, shown in @fig-clust-SOMa, was obtained using the default settings; it gave terrible results.  At the left is the
map view, in which the fit looks deceptively reasonable.  The points are spread evenly through the grid, with rock tracks (purple) at the
upper right, classical tracks (green) at the lower left, and new wave tracks (the three black rectangles) in between.  The tour view in the same figure, however, shows the fit to be inadequate.  The net is a flat rectangle in the 5D space and has not sufficiently wrapped through the data. This is the result of stopping the algorithm too soon, thus failing to let it converge fully.


% Figure 9
\begin{figure*}[thbp]
\centerline{{\includegraphics[width=2in]{chap-clust/music-SOM1a-bad.pdf}}
 {\includegraphics[width=2in]{chap-clust/music-SOM1b-bad.pdf}}}
\caption[Unsuccessful SOM fit]{Unsuccessful SOM fit shown in a 2D map
view and a tour projection.  Although the fit looks good in the map
view, the view of the fit in the 5D data space shows that the net has
not sufficiently wrapped into the data: The algorithm has not
converged fully.}
\label{clust-SOMa}
\end{figure*}

% Figure 10
\begin{figure*}[bhtp]
\centerline{{\includegraphics[width=2in]{chap-clust/music-SOM2f.pdf}}
 {\includegraphics[width=2in]{chap-clust/music-SOM2b.pdf}}}
\smallskip
\centerline{{\includegraphics[width=2in]{chap-clust/music-SOM2d.pdf}}
 {\includegraphics[width=2in]{chap-clust/music-SOM2e.pdf}}}
\caption[Successful SOM fit]{Successful SOM fit shown in a 2D map
view and tour projections.  Here we see a more successful SOM fit,
using standardized data.  The net wraps through the nonlinear
dependencies in the data, but some outliers remain.  }
\label{clust-SOMb}
\end{figure*}


@fig-clust-SOMb shows our favorite fit to the data. The data was standardized, we used a 6$\times$6 net, and we ran the SOM algorithm for 1,000 iterations. The map is at the top left, and it matches the map already shown in @fig-music-som, except for the small jittering of points in the earlier figure. The other three plots show different projections from the grand tour.  The upper right plot shows how the net curves with the nonlinear dependency in the data: The net is warped in some directions to fit the variance pattern.  At the
bottom right we see that one side of the net collects a long separated cluster of the Abba tracks. We can also see that the net has not been stretched out to the full extent of the range of the data. It is tempting to manually manipulate the net to stretch it in different directions and update the fit.

It turns out that the PCA view of the data more accurately reflects the structure in the data than the map view.  The music pieces really are clumped together in the 5D space, and there are a few outliers.
\index{outliers}
-->
